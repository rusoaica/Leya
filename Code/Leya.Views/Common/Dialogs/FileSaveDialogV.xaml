<Window x:Class="Leya.Views.Common.Dialogs.FileSaveDialogV"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
        xmlns:common="clr-namespace:Leya.Views.Common.AttachedProperties"
        xmlns:converters="clr-namespace:Leya.Views.Common.Converters" 
        xmlns:Controls="clr-namespace:System.Windows.Controls" 
        xmlns:behaviors="clr-namespace:Leya.Views.Common.AttachedProperties" 
        xmlns:NavigationTreeView="clr-namespace:Leya.Views.Common.Controls.NavigationTreeView" 
        xmlns:controls="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel" 
        mc:Ignorable="d"
              Title="{Binding WindowTitle}" Style="{DynamicResource WindowStyle}" common:DialogResultBehavior.DialogResult="{Binding DialogResult, Mode=TwoWay}" Width="1000" AllowsTransparency="False" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" FontSize="14" MinWidth="600" MinHeight="614" SizeChanged="Window_SizeChanged" ContentRendered="Window_ContentRendered">
    <Window.Resources>
        <converters:HeaderToImageConverter x:Key="HeaderToImageConverter"/>
        <converters:GridLengthValueConverter x:Key="GridLengthValueConverter"/>
        <converters:WidthAdjustmentConverter x:Key="WidthAdjustmentConverter"/>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding ContentRenderedAsync_Command}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Background="{DynamicResource containerBackground}">
        <Border Style="{DynamicResource contentBorder}" Margin="10,31,10,74"/>
        <Button Content="Save" Style="{DynamicResource confirmButton}" Command="{Binding ConfirmSelection_Command}" HorizontalAlignment="Right" Margin="0,0,10,10" Height="22" VerticalAlignment="Bottom" Width="105"/>
        <Button Content="Cancel" Style="{DynamicResource abortButton}" Command="{Binding DiscardSelection_Command}" Margin="0,0,120,9" Height="22" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="105"/>
        <Grid Height="31" VerticalAlignment="Top" Margin="81,0,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Controls:AutoCompleteBox ItemsSource="{Binding SourceSearchDirectories}" ValueMemberBinding="{Binding Value}" SelectedItem="{Binding SearchDirectoriesSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" Grid.Column="0" VerticalAlignment="Center" MinimumPrefixLength="0" MaxDropDownHeight="800" IsTextCompletionEnabled="True">
                <Controls:AutoCompleteBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="500" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Text}"/>
                            <TextBlock HorizontalAlignment="Right" Foreground="Gray" Text="{Binding Value}" Grid.Column="1" />
                        </Grid>
                    </DataTemplate>
                </Controls:AutoCompleteBox.ItemTemplate>
                <Controls:AutoCompleteBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding SearchDirectoriesKeyUpAsync_Command}" />
                </Controls:AutoCompleteBox.InputBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DropDownClosing">
                        <i:InvokeCommandAction Command="{Binding SearchDirectoriesDropDownClosingAsync_Command}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Controls:AutoCompleteBox>
            <CheckBox IsChecked="{Binding IsFavoritePath}" Style="{DynamicResource styleRatingCheckBox}" ToolTip="Favorite Directory" VerticalAlignment="Center" HorizontalAlignment="Center" Height="20" Width="20" Cursor="Hand" Opacity="0.4" Grid.Column="1">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SetIsFavoritePath_Command}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SetIsFavoritePath_Command}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            <CheckBox Style="{DynamicResource stylePreviewCheckBox}" IsChecked="{Binding IsPreviewPanelVisible, Mode=TwoWay}" ToolTip="Preview" VerticalAlignment="Center" HorizontalAlignment="Center" Height="20" Width="20" Cursor="Hand" Opacity="0.4" Grid.Column="2" Checked="TogglePreviewPanel_CheckChanged" Unchecked="TogglePreviewPanel_CheckChanged"/>
            <Button Command="{Binding ShowNewFolderDialog_Command}" Content="New Folder" Style="{DynamicResource abortButton}" Visibility="{Binding ShowNewFolderButton, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="3" Height="21" Width="90" Margin="3,0,0,0" VerticalAlignment="Center" Click="ShowNewFolderModalBox"/>
        </Grid>
        <Image Cursor="Hand" ToolTip="Up one level" Margin="54,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Source="/Resources/Previous-icon.png" Height="20" Width="20" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <RotateTransform Angle="90"/>
                </TransformGroup>
            </Image.RenderTransform>
            <Image.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.NavigateUpAsync_Command}"/>
            </Image.InputBindings>
        </Image>
        <Image Cursor="Hand" ToolTip="Back" Margin="10,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Source="/Resources/Previous-icon.png" Height="20" Width="20">
            <Image.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.NavigateBackAsync_Command}"/>
            </Image.InputBindings>
        </Image>
        <Image Cursor="Hand" ToolTip="Forward" Margin="32,6,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Source="/Resources/Next-icon.png" Height="20" Width="20">
            <Image.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.NavigateForwardAsync_Command}"/>
            </Image.InputBindings>
        </Image>
        <TextBox Text="{Binding Filename, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{DynamicResource textBoxStyle}" Height="23" Margin="10,0,10,46" VerticalAlignment="Bottom" TabIndex="0"/>
        <Grid Margin="10,31,10,74" x:Name="grdContainer">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" MinWidth="300"/>
                <ColumnDefinition Width="3"/>
                <ColumnDefinition Width="7*" MinWidth="300"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Margin="10,10,5,10">
                <NavigationTreeView:FileSystemTreeView DataContext="{Binding SingleTree}" Margin="0,0,0,30"/>
                <ComboBox ItemsSource="{Binding SourceNavigationTreeViewFilter}" SelectedIndex="{Binding RootNr}" FontSize="14" Height="25" VerticalAlignment="Bottom"/>
            </Grid>
            <GridSplitter Grid.Column="1" Background="{DynamicResource SeparatorBackground}" HorizontalAlignment="Stretch" Width="3" Margin="0,2,0,2" DragCompleted="Separator_DragCompleted"/>
            <Grid Grid.Column="2" Margin="10,10,10,10" ClipToBounds="True">
                <ListView ItemsSource="{Binding SourceDirectories}" x:Name="lstDirectories"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                    VirtualizingStackPanel.IsVirtualizing ="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                    ItemContainerStyle="{DynamicResource AlternatingListViewItemStyle}"
                    Margin="2,-2,2,30" AlternationCount="2" SelectionChanged="Directories_SelectionChanged">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <controls:VirtualizingWrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <i:Interaction.Behaviors>
                        <behaviors:HorizontalScrollBehavior />
                    </i:Interaction.Behaviors>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, Path=ActualWidth, Converter={StaticResource WidthAdjustmentConverter}}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate >
                                        <Label HorizontalAlignment="Stretch" Cursor="Hand" Background="Transparent" DataContext="{Binding}" IsTabStop="True" BorderThickness="0" Padding="3">
                                            <Label.Content>
                                                <DockPanel>
                                                    <Grid Height="32" Width="32" DockPanel.Dock="Left" Margin="0" VerticalAlignment="Center">
                                                        <Image x:Name="img" Width="32" Height="72" Margin="0"/>
                                                        <TextBlock x:Name="ObjType" Padding="0" Margin="0" Height="10" HorizontalAlignment="Center" FontSize="8" Foreground="{DynamicResource contentBackground}"/>
                                                    </Grid>
                                                    <Label x:Name="ObjName" DockPanel.Dock="Left" Padding="4,0,0,0" Margin="0" Height="32" VerticalAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold" Content="{Binding Path}" Foreground="{DynamicResource textForeground}"/>
                                                </DockPanel>
                                            </Label.Content>
                                            <Label.ToolTip>
                                                <ToolTip Name="FileInfo" Placement="Mouse">
                                                    <TextBlock Text="{Binding Path}"/>
                                                </ToolTip>
                                            </Label.ToolTip>
                                            <Label.InputBindings>
                                                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.FolderMouseDoubleClickAsync_Command}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"/>
                                            </Label.InputBindings>
                                        </Label>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=DirType}" Value="0">
                                                <Setter Property="Image.Source" TargetName="img" Value="/Resources/file.png"></Setter>
                                                <Setter Property="Text" TargetName="ObjType" Value="{Binding Extension}"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DirType}" Value="1">
                                                <Setter Property="Image.Source" TargetName="img" Value="/Resources/drive.png"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DirType}" Value="2">
                                                <Setter Property="Image.Source" TargetName="img" Value="/Resources/folder-empty.png"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=DirType}" Value="3">
                                                <Setter Property="Image.Source" TargetName="img" Value="/Resources/file.png"></Setter>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <Rectangle Fill="{DynamicResource BorderUnlit}" Height="10" Margin="-3,-8,-3,0" VerticalAlignment="Top">
                    <Rectangle.Effect>
                        <DropShadowEffect BlurRadius="15" Color="#000" Direction="300" Opacity="1" RenderingBias="Quality" ShadowDepth="5" />
                    </Rectangle.Effect>
                </Rectangle>
                <Rectangle Fill="{DynamicResource BorderUnlit}" Width="10" Margin="-8,-3,0,30" HorizontalAlignment="Left">
                    <Rectangle.Effect>
                        <DropShadowEffect BlurRadius="15" Color="#000" Direction="000" Opacity="1" RenderingBias="Quality" ShadowDepth="5" />
                    </Rectangle.Effect>
                </Rectangle>
                <Rectangle Fill="{DynamicResource BorderLit}" Margin="-3,0,-3,30" Height="1" VerticalAlignment="Bottom"/>
                <Rectangle Fill="{DynamicResource BorderLit}" Width="1.5" Margin="-8,-3,0,30" HorizontalAlignment="Right"/>
                <Label Content="Filter by extension:" Foreground="{DynamicResource textForeground}" Padding="0" VerticalContentAlignment="Center" Height="25" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="128"/>
                <ComboBox ItemsSource="{Binding SourceExtensionFilter}" DisplayMemberPath="Text" SelectedItem="{Binding SelectedExtensionFilter}" FontSize="14" Height="25" VerticalAlignment="Bottom" Margin="133,0,0,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectedExtensionChangedAsync_Command}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>
            <Grid Grid.Column="3" Width="200" x:Name="grdPreview" Visibility="Collapsed">
                <TextBox Text="{Binding TextFilePreview}" Visibility="{Binding IsTextFile, Converter={StaticResource BooleanToVisibilityConverter}}" TextWrapping="WrapWithOverflow" VerticalScrollBarVisibility="Auto" IsReadOnly="True" Style="{DynamicResource textBoxStyle}"/>
                <Image Source="{Binding ImageFilePreview}" Visibility="{Binding IsImageFile, Converter={StaticResource BooleanToVisibilityConverter}}" Width="{Binding ActualWidth, Converter={StaticResource GridLengthValueConverter}}" Height="{Binding ActualHeight, Converter={StaticResource GridLengthValueConverter}}" Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="Uniform" />
            </Grid>
        </Grid>
        <Grid Background="{DynamicResource ModalGridBackground}" Visibility="Collapsed" Margin="0" Grid.RowSpan="3" Grid.ColumnSpan="2" Opacity="0.7" x:Name="modalGrid"/>
        <Grid Background="DodgerBlue" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center" Width="442" Height="170" x:Name="modalBg">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="50" Color="#000" Direction="300" Opacity="0.7" RenderingBias="Quality" ShadowDepth="50" />
            </Grid.Effect>
        </Grid>
        <Grid Name="grdNewFolder" Background="{DynamicResource containerBackground}" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center" Width="440" Height="168">
            <Border Style="{DynamicResource contentBorder}" Margin="5"/>
            <Label Content="Enter the new folder name:" Height="25" HorizontalContentAlignment="Center" Padding="5,0" VerticalAlignment="Top" Foreground="{DynamicResource textForeground}" Margin="20,24,12,0"/>
            <TextBox Text="{Binding NewFolderName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{DynamicResource textBoxStyle}" x:Name="txtNewFolderName" FontWeight="Bold" Grid.Column="0" Margin="10,0,12,0" Height="24" VerticalAlignment="Center" HorizontalContentAlignment="Right" FontSize="14" KeyUp="NewFolderName_KeyUp"/>
            <Button Content="Confirm" Command="{Binding CreateNewFolder_Command}" Style="{DynamicResource confirmButton}" HorizontalAlignment="Right" Margin="0,0,12,17" Height="22" VerticalAlignment="Bottom" Width="105" Click="HideNewFolderModalBox"/>
            <Button Content="Cancel" Style="{DynamicResource abortButton}" Focusable="False" Margin="0,0,122,16" Height="22" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="105" Click="HideNewFolderModalBox"/>
        </Grid>
    </Grid>
</Window>
